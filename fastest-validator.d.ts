/** Declaration file generated by dts-gen */

export = fastest_validator;

declare class fastest_validator {
    constructor(opts: any);

    add(type: any, fn: any): void;

    checkSchemaArray(value: any, compiledArray: any, path: any, parent: any): any;

    checkSchemaObject(value: any, compiledObject: any, path: any, parent: any): any;

    checkSchemaObjectInner(value: any, compiledObject: any, path: any, parent: any): any;

    checkSchemaRule(value: any, compiledRule: any, path: any, parent: any): any;

    checkSchemaType(value: any, compiledType: any, path: any, parent: any): any;

    compile(schema: any): any;

    compileSchemaObject(schemaObject: any): any;

    compileSchemaRule(schemaRule: any): any;

    compileSchemaType(schemaType: any): any;

    handleResult(errors: any, fieldPath: any, res: any): void;

    makeError(type: any, expected: any, actual: any): any;

    resolveMessage(err: any): any;

    validate(obj: any, schema: any): any;

}

declare namespace fastest_validator {
    namespace prototype {
        function add(type: any, fn: any): void;

        function checkSchemaArray(value: any, compiledArray: any, path: any, parent: any): any;

        function checkSchemaObject(value: any, compiledObject: any, path: any, parent: any): any;

        function checkSchemaObjectInner(value: any, compiledObject: any, path: any, parent: any): any;

        function checkSchemaRule(value: any, compiledRule: any, path: any, parent: any): any;

        function checkSchemaType(value: any, compiledType: any, path: any, parent: any): any;

        function compile(schema: any): any;

        function compileSchemaObject(schemaObject: any): any;

        function compileSchemaRule(schemaRule: any): any;

        function compileSchemaType(schemaType: any): any;

        function handleResult(errors: any, fieldPath: any, res: any): void;

        function makeError(type: any, expected: any, actual: any): any;

        function resolveMessage(err: any): any;

        function validate(obj: any, schema: any): any;

        namespace add {
            const prototype: {
            };

        }

        namespace checkSchemaArray {
            const prototype: {
            };

        }

        namespace checkSchemaObject {
            const prototype: {
            };

        }

        namespace checkSchemaObjectInner {
            const prototype: {
            };

        }

        namespace checkSchemaRule {
            const prototype: {
            };

        }

        namespace checkSchemaType {
            const prototype: {
            };

        }

        namespace compile {
            const prototype: {
            };

        }

        namespace compileSchemaObject {
            const prototype: {
            };

        }

        namespace compileSchemaRule {
            const prototype: {
            };

        }

        namespace compileSchemaType {
            const prototype: {
            };

        }

        namespace handleResult {
            const prototype: {
            };

        }

        namespace makeError {
            const prototype: {
            };

        }

        namespace resolveMessage {
            const prototype: {
            };

        }

        namespace validate {
            const prototype: {
            };

        }

    }

}

